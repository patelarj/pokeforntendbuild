{"version":3,"sources":["models/Pokemon.ts","components/common/like.tsx","services/httpService.ts","services/pokemonServices.ts","components/pokemonDisplay.tsx","components/common/pagination.tsx","components/pokemonsGrid.tsx","components/sideBar.tsx","components/common/listGroup.tsx","services/pokeServices/generationService.ts","services/pokeServices/typeService.ts","components/common/searchBox.tsx","components/pokedex.tsx","utils/paginate.ts","services/authService.ts","components/navbar.tsx","components/notFound.tsx","components/protectedRoute.tsx","components/loginComponent/login.tsx","components/registerComponent/register.tsx","services/userService.ts","components/favoriteslist.tsx","components/teamCard.tsx","components/team.tsx","services/pokeServices/pokemonService.ts","components/game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PokemonType","useStyles","makeStyles","regular","color","liked","Like","onClick","classes","icon","className","size","style","margin","cursor","aria-hidden","Pokemon","id","name","weight","picture","type","axios","defaults","baseURL","process","REACT_APP_API_URL","interceptors","response","use","data","error","status","console","log","toast","Promise","reject","dbApi","create","pokeApi","getOnePokemon","pokeId","a","get","res","pokemon","sprites","front_default","types","Error","getTeamById","teamId","getfavList","userId","favlist","addFav","favUserId","favPokeId","favarate","post","flying","backgroundColor","fire","normal","fighting","water","grass","poison","electric","ground","psychic","rock","ice","bug","dragon","ghost","dark","steel","fairy","theme","root","minWidth","maxWidth","height","cardContent","faIcon","spacing","alignItems","PokemonDisplay","props","user","JSON","parse","localStorage","getItem","userid","useState","setLiked","React","anchorEl","setAnchorEl","createNewTeam","setCreateNewTeam","changeFavoritesList","useEffect","isfavorite","getFavList","Card","CardMedia","image","title","CardContent","Typography","marginLeft","variant","component","Chip","marginRight","label","display","IconButton","aria-controls","aria-haspopup","event","currentTarget","padding","outline","Menu","keepMounted","open","Boolean","onClose","map","team","MenuItem","disableRipple","Checkbox","defaultChecked","inputProps","Divider","TextField","required","placeholder","Button","width","trigger","deletFav","Pagination","itemsCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","_","range","secondPagesArr","slice","length","count","unshift","paddingTop","paddingRight","page","paddingLeft","PokemonsGrid","pokemons","currPage","setCurrPage","pokemonDisplays","Grid","xs","item","container","createStyles","menuButton","hide","drawer","flexShrink","whiteSpace","toolbar","zIndex","justifyContent","mixins","content","flexGrow","drawerPaper","MiniDrawer","renderSwitch","index","CssBaseline","Drawer","paper","Toolbar","List","el","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","isHorizontal","apiEndpoint","getGenerations","results","i","_id","getTypes","params","limit","offset","SearchBox","value","onChange","e","Pokedex","filters","setFilters","setGenerations","setTypes","setCurrentPage","searchQuery","setSearchQuery","selectedCategory","selectedFilter","setSelectedFilter","generations","initializeData","filtered","filter","p","toLowerCase","startsWith","currPagePokemons","pageNumber","startIndex","take","paginate","totalCount","getPageData","marginTop","query","login","userName","userPassword","setItem","stringify","logout","removeItem","getCurrentUser","ex","appBar","Navbar","AppBar","position","edge","aria-label","NotFound","src","alt","ProtectedRoute","path","Component","render","rest","auth","pathname","state","from","location","flexDirection","alignItem","avatar","palette","secondary","main","form","submit","Login","changeUsername","changePassword","history","useHistory","submitLogin","preventDefault","push","Container","Avatar","onSubmit","fullWidth","autoComplete","autoFocus","target","href","Register","userFirstName","changeFirstName","userLastName","changeLastName","submitRegister","userFirstname","userLastname","FavoritesList","favotiteList","changeFavoriteList","newData","setNewData","chageState","displayPokemon","fpokemon","favorite","fontSize","pos","marginBottom","TeamCard","currentTeamList","changeCurrentTeamList","currentPokemon","setPokemon","getTeamList","tempArr","teamPokeId","getPokemon","displayTeamList","teamL","gutterBottom","CardActions","Team","currentTeam","changeCurrentTeam","myArr","teams","teamNames","getTeam","displayTeam","fteam","teamid","teamName","pokemonUrl","identifier","getPokemons","options","ele","all","Game","pokedex","setPokeDex","Grass","Poison","rendomPokemon","setRendomPokemon","sendRequest","setSendRequest","min","max","floor","random","getPoke","pokeDexDisplay","alignContent","RendomDisplayPokemon","direction","justify","prevState","poke","library","add","fas","faPlus","faHeart","UserContext","createContext","undefined","App","setPokemons","Provider","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.09376acf.chunk.js","sourcesContent":["export class Pokemon {\r\n  id: number;\r\n  name: string;\r\n  weight: number;\r\n  picture: string; //url to the remote photo\r\n  type: [PokemonType, PokemonType | null];\r\n}\r\n\r\nexport enum PokemonType {\r\n  Flying = \"flying\",\r\n  Fire = \"fire\",\r\n  Normal = \"normal\",\r\n  Fighting = \"fighting\",\r\n  Water = \"water\",\r\n  Grass = \"grass\",\r\n  Poison = \"poison\",\r\n  Electric = \"electric\",\r\n  Ground = \"ground\",\r\n  Psychic = \"psychic\",\r\n  Rock = \"rock\",\r\n  Ice = \"ice\",\r\n  Bug = \"bug\",\r\n  Dragon = \"dragon\",\r\n  Ghost = \"ghost\",\r\n  Dark = \"dark\",\r\n  Steel = \"steel\",\r\n  Fairy = \"fairy\",\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst useStyles = makeStyles({\r\n  regular: {\r\n    color: \"white\",\r\n  },\r\n  liked: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst Like: React.FunctionComponent<any> = ({ liked, onClick }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <FontAwesomeIcon\r\n      icon=\"heart\"\r\n      className={liked ? classes.liked : classes.regular}\r\n      size={\"lg\"}\r\n      style={{\r\n        margin: \"0 5\",\r\n        cursor: \"pointer\",\r\n      }}\r\n      onClick={onClick}\r\n      aria-hidden=\"true\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(\r\n  ({ data }: AxiosResponse) => data,\r\n  (error) => {\r\n    const expectedError =\r\n      error.response &&\r\n      error.response.status >= 400 &&\r\n      error.response.status < 500;\r\n\r\n    if (!expectedError) {\r\n      console.log(error);\r\n      toast.error(\"An unexpected error occurrred.\");\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const dbApi = axios.create({ baseURL: process.env.REACT_APP_API_URL });\r\nexport const pokeApi = axios.create({\r\n  baseURL: \"https://pokeapi.co/api/v2\",\r\n});\r\n","import { Pokemon } from \"../models/Pokemon\";\r\nimport { TeamList, Teams } from \"../models/User\";\r\nimport { dbApi, pokeApi } from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/pokemon\";\r\n\r\nfunction pokemonUrl(id: Number) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getPokemons() {\r\n  return pokeApi.get(apiEndpoint);\r\n}\r\n\r\nexport function getPokemon(id: Number) {\r\n  return pokeApi.get(pokemonUrl(id));\r\n}\r\n\r\nexport const getOnePokemon = async (pokeId: number): Promise<Pokemon> => {\r\n  try {\r\n\r\n    console.log(pokeId)\r\n    let res = await pokeApi.get(`/pokemon/${pokeId}`)\r\n\r\n    let pokemon = new Pokemon()\r\n    pokemon.id = res.data.id\r\n    pokemon.name = res.data.name\r\n    pokemon.picture = res.data.sprites.front_default\r\n    pokemon.weight = res.data.weight\r\n    pokemon.type = [res.data.types[0].type.name, res.data.types[1] && res.data.types[1].type.name]\r\n    \r\n    return pokemon\r\n  } catch (e) {\r\n    throw new Error()\r\n  }\r\n}\r\n\r\nexport const getTeamById = async (teamId: number): Promise<any> => {\r\n  try {\r\n    let res = await dbApi.get(`/team/${teamId}`)\r\n\r\n    return res.data;\r\n\r\n  } catch (e) {\r\n    throw new Error();\r\n  }\r\n}\r\n\r\nexport function deletePokeFromFavorite(favUserId: number, favPokeId: number) {\r\n\r\n  dbApi.post(`/favorite/deletfav/`, { favUserId, favPokeId })\r\n  console.log(\"deleted\")\r\n}\r\n\r\nexport const getfavList = async (userId: number): Promise<any> => {\r\n\r\n  try {\r\n\r\n    let res = await dbApi.get(`/user/${userId}`)\r\n\r\n    return res.data.favlist\r\n    // wait for all request to finish \r\n\r\n  } catch (e) {\r\n\r\n  }\r\n\r\n}\r\n\r\nexport const addFav = async (favUserId: number, favPokeId: number): Promise<any> => {\r\n\r\n  let favarate = {\r\n    favUserId,\r\n    favPokeId\r\n  }\r\n\r\n  try {\r\n\r\n    let res = await dbApi.post(\"/favorite\", favarate)\r\n\r\n\r\n    // console.log(res.data)\r\n    return res.data\r\n  }\r\n  catch (e) {\r\n\r\n  }\r\n}\r\n\r\n","import {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Checkbox,\r\n  Chip,\r\n  Divider,\r\n  IconButton,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Pokemon, PokemonType } from \"../models/Pokemon\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Like from \"./common/like\";\r\n\r\nimport {\r\n  addFav,\r\n  deletePokeFromFavorite,\r\n  getfavList,\r\n} from \"../services/pokemonServices\";\r\nimport { Favorites } from \"../models/User\";\r\n\r\nconst types = {\r\n  flying: {\r\n    backgroundColor: \"#A890F0\",\r\n  },\r\n  fire: {\r\n    backgroundColor: \"#F08030\",\r\n  },\r\n  normal: {\r\n    backgroundColor: \"#A8A878\",\r\n  },\r\n  fighting: {\r\n    backgroundColor: \"#C03028\",\r\n  },\r\n  water: {\r\n    backgroundColor: \"#6890F0\",\r\n  },\r\n  grass: {\r\n    backgroundColor: \"#78C850\",\r\n  },\r\n  poison: {\r\n    backgroundColor: \"#A040A0\",\r\n  },\r\n  electric: {\r\n    backgroundColor: \"#F8D030\",\r\n  },\r\n  ground: {\r\n    backgroundColor: \"#E0C068\",\r\n  },\r\n  psychic: {\r\n    backgroundColor: \"#F85888\",\r\n  },\r\n  rock: {\r\n    backgroundColor: \"#B8A038\",\r\n  },\r\n  ice: {\r\n    backgroundColor: \"#98D8D8\",\r\n  },\r\n  bug: {\r\n    backgroundColor: \"#A8B820\",\r\n  },\r\n  dragon: {\r\n    backgroundColor: \"#7038F8\",\r\n  },\r\n  ghost: {\r\n    backgroundColor: \"#705898\",\r\n  },\r\n  dark: {\r\n    backgroundColor: \"#705848\",\r\n  },\r\n  steel: {\r\n    backgroundColor: \"#B8B8D0\",\r\n  },\r\n  fairy: {\r\n    backgroundColor: \"#EE99AC\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 200,\r\n    maxWidth: 300,\r\n  },\r\n  picture: {\r\n    height: 225,\r\n  },\r\n  cardContent: {\r\n    backgroundColor: \"#373737\",\r\n  },\r\n  faIcon: {\r\n    color: \"white\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  icon: {\r\n    alignItems: \"left\",\r\n  },\r\n  ...types,\r\n}));\r\n\r\ninterface IPokemonDisplayProps {\r\n  pokemon: Pokemon;\r\n  favorite?: Favorites;\r\n  isfavorite?: Boolean;\r\n  trigger?: any;\r\n}\r\n\r\nexport const PokemonDisplay: React.FunctionComponent<IPokemonDisplayProps> = (\r\n  props\r\n) => {\r\n  var user = JSON.parse(localStorage.getItem(\"userKey\")!);\r\n  const userid = user ? user.userId : null;\r\n\r\n  const [liked, setLiked] = useState<boolean>(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [createNewTeam, setCreateNewTeam] = React.useState<boolean>(false);\r\n  const [favoritesList, changeFavoritesList] = useState<Favorites[]>([]);\r\n  const classes = useStyles();\r\n\r\n  const dummyTeamsData = [\r\n    { name: \"team 1\" },\r\n    { name: \"team 2\" },\r\n    { name: \"team 3\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (props.isfavorite) {\r\n      setLiked(!liked);\r\n    }\r\n\r\n    let getFavList = async () => {\r\n      changeFavoritesList(await getfavList(userid));\r\n    };\r\n    getFavList();\r\n  }, []);\r\n\r\n  const handlePlusClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setCreateNewTeam(false);\r\n  };\r\n\r\n  const handlePlusClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLikeClick = () => {\r\n    if (!user) {\r\n      //TODO redirect to login\r\n      return;\r\n    }\r\n    setLiked(!liked);\r\n\r\n    console.log(liked);\r\n    if (!liked) {\r\n      let getFavList = async () => {\r\n        await addFav(userid, props.pokemon.id);\r\n      };\r\n      getFavList();\r\n    } else if (liked) {\r\n      console.log(\"i am deleting\");\r\n\r\n      let deletFav = async () => {\r\n        deletePokeFromFavorite(userid, props.pokemon.id);\r\n      };\r\n      deletFav();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root + \" \" + classes.steel}>\r\n      <CardMedia\r\n        className={classes.picture}\r\n        style={{ backgroundColor: \"black\" }}\r\n        image={props.pokemon.picture}\r\n        title={`Picture of ${props.pokemon.name}`}\r\n      />\r\n      <CardContent className={classes.cardContent}>\r\n        <div className=\"row\">\r\n          <Typography\r\n            style={{ color: \"white\", marginLeft: 15 }}\r\n            variant=\"h5\"\r\n            component=\"h3\"\r\n          >\r\n            {props.pokemon.name}\r\n          </Typography>\r\n        </div>\r\n        <div className=\"row\">\r\n          <Chip\r\n            className={classes[props.pokemon.type[0]]}\r\n            style={{ marginLeft: 15, marginRight: 5 }}\r\n            label={props.pokemon.type[0]}\r\n          />\r\n          {props.pokemon.type[1] && (\r\n            <Chip\r\n              className={classes[props.pokemon.type[1]]}\r\n              label={props.pokemon.type[1]}\r\n            />\r\n          )}\r\n          <div\r\n            className=\"ml-auto\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <IconButton\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handlePlusClick}\r\n              style={{ padding: 0 }}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon=\"plus\"\r\n                className={classes.faIcon}\r\n                style={{\r\n                  margin: \"0 5\",\r\n                  cursor: \"pointer\",\r\n                  outline: \"none\",\r\n                }}\r\n              />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handlePlusClose}\r\n            >\r\n              {dummyTeamsData.map((team) => (\r\n                <MenuItem disableRipple key={team.name}>\r\n                  <Checkbox\r\n                    defaultChecked\r\n                    color=\"primary\"\r\n                    inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  />\r\n                  {team.name}\r\n                </MenuItem>\r\n              ))}\r\n              <Divider />\r\n              {createNewTeam ? (\r\n                <section>\r\n                  <MenuItem disableRipple>\r\n                    <TextField\r\n                      required\r\n                      id=\"standard-required\"\r\n                      label=\"Name\"\r\n                      placeholder=\"Enter team name...\"\r\n                      style={{ marginLeft: 16, marginRight: 16 }}\r\n                    />\r\n                  </MenuItem>\r\n                  <MenuItem disableRipple>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      className={\"ml-auto\"}\r\n                    >\r\n                      Create\r\n                    </Button>\r\n                  </MenuItem>\r\n                </section>\r\n              ) : (\r\n                <MenuItem onClick={() => setCreateNewTeam(true)}>\r\n                  <FontAwesomeIcon icon=\"plus\" style={{ width: 42 }} />\r\n                  new team\r\n                </MenuItem>\r\n              )}\r\n            </Menu>\r\n            <div onClick={props.trigger}>\r\n              <Like liked={liked} onClick={handleLikeClick} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\ninterface IPagination {\r\n  itemsCount: number;\r\n  pageSize: number;\r\n  currentPage: number;\r\n  onPageChange: (page: number) => void;\r\n}\r\nconst Pagination: React.FunctionComponent<IPagination> = ({\r\n  itemsCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChange,\r\n}) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n  if (pageCount === 1) return null;\r\n\r\n  const pages: number[] = _.range(1, pageCount + 1);\r\n\r\n  let secondPagesArr: number[] = pages.slice(currentPage-1,currentPage+4);\r\n\r\n  if (currentPage === pages[pages.length-1]){\r\n    secondPagesArr = pages.slice(currentPage-5, currentPage);\r\n  }\r\n\r\n  if (secondPagesArr.length<5){\r\n    let count:number = 5-secondPagesArr.length;\r\n    secondPagesArr.unshift(...pages.slice((currentPage-1) - count, currentPage-1));\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\" style={{paddingTop:\"1vw\"}}>\r\n\r\n      {currentPage > pages[0] ?\r\n            <li style={{paddingRight:\"1vw\"}}>\r\n            <a className=\"page-link\" onClick={() => onPageChange(currentPage-1)}>\r\n              Previous\r\n            </a>\r\n          </li>\r\n          : ''\r\n      }\r\n      {currentPage > pages[0] ?\r\n        <li>\r\n          <a className=\"page-link\" onClick={() => onPageChange(1)}>\r\n            1\r\n          </a>\r\n        </li>\r\n        : ''\r\n      }\r\n      {currentPage > pages[0] ?\r\n            <li>\r\n            <a className=\"page-link\">\r\n              ...\r\n            </a>\r\n          </li>\r\n          : ''\r\n      }\r\n        {secondPagesArr.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n        {currentPage < pages[pages.length-5] ?\r\n            <li>\r\n            <a className=\"page-link\">\r\n              ...\r\n            </a>\r\n          </li>\r\n          : ''\r\n          }\r\n        {currentPage < pages[pages.length-5] ?\r\n          <li>\r\n          <a className=\"page-link\" onClick={() => onPageChange(pageCount)}>\r\n            {pageCount}\r\n          </a>\r\n        </li>\r\n          : \"\"\r\n        }\r\n        {currentPage < pages[pages.length-1]  ?\r\n            <li  style={{paddingLeft:\"1vw\"}}>\r\n            <a className=\"page-link\" onClick={() => onPageChange(currentPage+1)}>\r\n              Next\r\n            </a>\r\n          </li>\r\n          : ''\r\n      }\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport { Pokemon } from \"../models/Pokemon\";\r\nimport { PokemonDisplay } from \"./pokemonDisplay\";\r\nimport Pagination from \"./common/pagination\";\r\n\r\ninterface IPokemonsGrid {\r\n  pokemons: Pokemon[];\r\n}\r\nexport const PokemonsGrid: React.FunctionComponent<IPokemonsGrid> = ({\r\n  pokemons,\r\n}) => {\r\n  const [pageSize, setPageSize] = useState<number>(9);\r\n  const [currPage, setCurrPage] = useState<number>(1);\r\n\r\n  let pokemonDisplays = pokemons.map((pokemon) => {\r\n    return (\r\n      <Grid key={pokemon.id} xs={4} item>\r\n        <PokemonDisplay pokemon={pokemon} />\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2}>\r\n        {pokemonDisplays}\r\n      </Grid>\r\n      <Pagination\r\n        itemsCount={pokemons.length}\r\n        pageSize={pageSize}\r\n        currentPage={currPage}\r\n        onPageChange={setCurrPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonsGrid;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport SportsEsportsTwoToneIcon from \"@material-ui/icons/SportsEsportsTwoTone\";\r\nimport FavoriteTwoToneIcon from \"@material-ui/icons/FavoriteTwoTone\";\r\nimport PeopleOutlineTwoToneIcon from \"@material-ui/icons/PeopleOutlineTwoTone\";\r\n\r\nconst drawerWidth = 175;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: \"none\",\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\",\r\n    },\r\n    toolbar: {\r\n      zIndex: -1,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n\r\n  const renderSwitch = (index: number): any => {\r\n    switch (index) {\r\n      case 0:\r\n        return <FavoriteTwoToneIcon />;\r\n      case 1:\r\n        return <PeopleOutlineTwoToneIcon />;\r\n      case 2:\r\n        return <SportsEsportsTwoToneIcon />;\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <Divider />\r\n\r\n        <List>\r\n          {[\r\n            [\"Favourites\", \"/fav\"],\r\n            [\"Teams\", \"/teams\"],\r\n            [\"Game\", \"/game\"],\r\n          ].map((el, index) => (\r\n            <ListItem button key={el[0]} component={Link} to={el[1]}>\r\n              <ListItemIcon>{renderSwitch(index)}</ListItemIcon>\r\n              <ListItemText primary={el[0]} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Toolbar />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\ninterface IVertListGroup {\r\n  items: any[];\r\n  textProperty?: string;\r\n  valueProperty?: string;\r\n  selectedItem: any;\r\n  onItemSelect: any;\r\n  isHorizontal?: boolean;\r\n}\r\nconst ListGroup: React.FunctionComponent<IVertListGroup> = ({\r\n  items,\r\n  textProperty = \"name\",\r\n  valueProperty = \"_id\",\r\n  selectedItem,\r\n  onItemSelect,\r\n  isHorizontal = false,\r\n}) => {\r\n  return (\r\n    <ul\r\n      className={\"list-group\" + (isHorizontal ? \" list-group-horizontal\" : \"\")}\r\n    >\r\n      {items.map((item) => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListGroup;\r\n","import { pokeApi } from \"../httpService\";\r\n\r\nconst apiEndpoint = \"/generation\";\r\n\r\nexport function generationUrl(identifier: any) {\r\n  return `${apiEndpoint}/${identifier}`;\r\n}\r\n\r\nexport async function getGenerations() {\r\n  const { data } = await pokeApi.get(apiEndpoint);\r\n\r\n  let results: any[] = data.results;\r\n  for (let i = 1; i <= results.length; i++) {\r\n    results[i - 1]._id = i;\r\n  }\r\n\r\n  return results;\r\n}\r\n","import { pokeApi } from \"../httpService\";\r\n\r\nconst apiEndpoint = \"/type\";\r\n\r\nexport function typeUrl(identifier: any) {\r\n  return `${apiEndpoint}/${identifier}`;\r\n}\r\n\r\nexport async function getTypes() {\r\n  const { data } = await pokeApi.get(apiEndpoint, {\r\n    params: {\r\n      limit: 18,\r\n      offset: 0,\r\n    },\r\n  });\r\n\r\n  let results: any[] = data.results;\r\n  for (let i = 1; i <= results.length; i++) {\r\n    results[i - 1]._id = i;\r\n  }\r\n\r\n  return results;\r\n}\r\n","import React from \"react\";\r\n\r\nconst SearchBox: React.FunctionComponent<any> = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PokemonsGrid from \"./pokemonsGrid\";\r\nimport SideBar from \"./sideBar\";\r\nimport ListGroup from \"./common/listGroup\";\r\n\r\nimport { getPokemons } from \"../services/pokeServices/pokemonService\";\r\nimport { getGenerations } from \"../services/pokeServices/generationService\";\r\nimport { getTypes } from \"../services/pokeServices/typeService\";\r\nimport { Pokemon, PokemonType } from \"../models/Pokemon\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport Pagination from \"./common/pagination\";\r\n\r\ninterface IPokedex {\r\n  pokemons: Pokemon[];\r\n}\r\nconst Pokedex: React.FunctionComponent<IPokedex> = ({ pokemons }) => {\r\n  const [categories, setCategories] = useState<any[]>([\r\n    { name: \"generation\" },\r\n    { name: \"type\" },\r\n  ]);\r\n  const [filters, setFilters] = useState<any[]>([]);\r\n  const [generations, setGenerations] = useState<any[]>([]);\r\n  const [types, setTypes] = useState<any[]>([]);\r\n\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [pageSize, setPageSize] = useState<number>(9);\r\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState<any>({\r\n    name: \"type\",\r\n  });\r\n  const [selectedFilter, setSelectedFilter] = useState<any>(null);\r\n  const [selectedType, setSelectedType] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    const initializeData = async () => {\r\n      let data = await getGenerations();\r\n      const generations = [{ _id: \"\", name: \"All Generations\" }, ...data];\r\n\r\n      data = await getTypes();\r\n      const types = [{ _id: \"\", name: \"All Types\" }, ...data];\r\n\r\n      setGenerations(generations);\r\n      setTypes(types);\r\n\r\n      setFilters(types);\r\n    };\r\n    initializeData();\r\n  }, []);\r\n\r\n  const handleCategorySelect = (category: any) => {\r\n    setSelectedCategory(category);\r\n    switch (category.name) {\r\n      case \"generation\":\r\n        setFilters(generations);\r\n        break;\r\n      case \"type\":\r\n        setFilters(types);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleFilterSelect = (filter: any) => {\r\n    setSelectedFilter(filter);\r\n    setSearchQuery(\"\");\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleSearch = (query: string) => {\r\n    setSearchQuery(query);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const getPageData = (): any => {\r\n    let filtered = pokemons;\r\n    if (selectedCategory && selectedFilter && selectedFilter._id) {\r\n      switch (selectedCategory.name) {\r\n        case \"generation\":\r\n          break;\r\n        case \"type\":\r\n          filtered = pokemons.filter(\r\n            (p) =>\r\n              p.type[0] == selectedFilter.name ||\r\n              p.type[1] == selectedFilter.name\r\n          );\r\n          break;\r\n      }\r\n    }\r\n\r\n    if (searchQuery) {\r\n      filtered = filtered.filter((p) =>\r\n        p.name.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    }\r\n\r\n    const currPagePokemons = paginate(filtered, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, currPagePokemons };\r\n  };\r\n  const { totalCount, currPagePokemons } = getPageData();\r\n\r\n  return (\r\n    <div className=\"row\" style={{ margin: 0 }}>\r\n      <div className=\"col-2\">\r\n        <SideBar />\r\n      </div>\r\n      <div className=\"col-2\" style={{ marginTop: \"2vw\" }}>\r\n        {/* <ListGroup\r\n          items={categories}2\r\n          selectedItem={selectedCaqtegory}\r\n          onItemSelect={handleCategorySelect}\r\n          textProperty=\"name\"\r\n          valueProperty=\"name\"\r\n          isHorizontal={true}\r\n        /> */}\r\n        <ListGroup\r\n          items={filters}\r\n          selectedItem={selectedFilter}\r\n          onItemSelect={handleFilterSelect}\r\n        />\r\n      </div>\r\n      <div className=\"col-8\" style={{ marginTop: \"1vw\" }}>\r\n        <SearchBox value={searchQuery} onChange={handleSearch} />\r\n        <PokemonsGrid pokemons={currPagePokemons} />\r\n        <Pagination\r\n          itemsCount={totalCount}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={setCurrentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokedex;","import _ from \"lodash\";\r\n\r\nexport function paginate(items: any[], pageNumber: number, pageSize: number) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","\r\nimport { dbApi } from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/auth\";\r\n//const userKey = \"user\";\r\n\r\nexport async function login(userName: string, userPassword: string) {\r\ntry{\r\n\r\n  let res = await dbApi.post(apiEndpoint, { userName, userPassword });\r\n  localStorage.setItem(\"userKey\", JSON.stringify(res.data));\r\n //localStorage.setItem(userKey,res.data); \r\n \r\n console.log(localStorage.getItem(\"userKey\"));\r\n  return res.data\r\n}\r\ncatch(e){\r\n  console.log(e);\r\n  if(e.response){\r\n      throw new Error(e.response.data)\r\n  } else {\r\n      throw new Error(\"OOps Something went wrong?\")\r\n  }\r\n}\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(\"userKey\");\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const user = localStorage.getItem(\"userKey\");\r\n    return user;\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { logout } from \"../services/authService\";\r\nimport { Snackbar, SnackbarOrigin } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\n\r\nconst Navbar: React.FunctionComponent<any> = () => {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        className={classes.appBar}\r\n        position=\"fixed\"\r\n        style={{ backgroundColor: \"#c91104\", width: \"100vw\" }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            component={Link}\r\n            to=\"/\"\r\n          >\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Home\r\n          </Typography>\r\n          <Button color=\"inherit\" component={Link} to=\"/login\">\r\n            Login\r\n          </Button>\r\n          <Button color=\"inherit\" component={Link} to=\"/register\">\r\n            Register\r\n          </Button>\r\n          <Button color=\"inherit\" onClick={()=>logout()}>\r\n            LogOut\r\n          </Button>\r\n      \r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export const NotFound: React.FunctionComponent<any> = () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={process.env.PUBLIC_URL + \"/page404_LI.jpg\"}\r\n        alt=\"Page not found\"\r\n        style={{width:\"100%\", height:\"50vw\"}}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\n\r\nconst ProtectedRoute: React.FunctionComponent<any> = ({\r\n  path,\r\n  component: Component,\r\n  render,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getCurrentUser()) {\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/login\", state: { from: props.location } }}\r\n            />\r\n          );\r\n        } else {\r\n          return Component ? <Component {...props} /> : render(props);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { SyntheticEvent, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { User } from \"../../models/User\";\r\nimport { login } from \"../../services/authService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItem: \"center,\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login: React.FunctionComponent<any> = (props) => {\r\n  const [userName, changeUsername] = useState(\"\");\r\n  const [userPassword, changePassword] = useState(\"\");\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    changeUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    changePassword(e.target.value);\r\n  };\r\n\r\n  const submitLogin = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await login(userName, userPassword);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      changePassword(\"\");\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={submitLogin}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Username\"\r\n            name=\"email\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            value={userName}\r\n            onChange={handleUsernameChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={userPassword}\r\n            onChange={handlePasswordChange}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link href=\"/register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { SyntheticEvent } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { useState } from \"react\";\r\nimport { User } from \"../../models/User\";\r\nimport { register } from \"../../services/userService\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItem: \"center,\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\ninterface IRegisterProps {\r\n  registerUser: (u: User) => void;\r\n}\r\nconst Register: React.FunctionComponent<IRegisterProps> = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [userFirstName, changeFirstName] = useState(\"\");\r\n  const [userLastName, changeLastName] = useState(\"\");\r\n  const [userName, changeUsername] = useState(\"\");\r\n  const [userPassword, changePassword] = useState(\"\");\r\n\r\n  const handleFirstNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    changeFirstName(e.target.value);\r\n  };\r\n\r\n  const handleLastNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    changeLastName(e.target.value);\r\n  };\r\n\r\n  const handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    changeUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    changePassword(e.target.value);\r\n  };\r\n\r\n  const submitRegister = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      var data = {\r\n        userId: 0,\r\n        userFirstName: userFirstName,\r\n        userLastName: userLastName,\r\n        userName: userName,\r\n        userPassword: userPassword,\r\n      };\r\n      register(data);\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <AddCircleIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={submitRegister}>\r\n          <TextField\r\n            //variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"firstName\"\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            autoComplete=\"Name\"\r\n            autoFocus\r\n            value={userFirstName}\r\n            onChange={handleFirstNameChange}\r\n          />\r\n          <TextField\r\n            // variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            id=\"lastName\"\r\n            autoComplete=\"Surname\"\r\n            value={userLastName}\r\n            onChange={handleLastNameChange}\r\n          />\r\n          <TextField\r\n            // variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            value={userName}\r\n            onChange={handleUsernameChange}\r\n          />\r\n          <TextField\r\n            // variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            autoComplete=\"password\"\r\n            autoFocus\r\n            value={userPassword}\r\n            onChange={handlePasswordChange}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Register\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                {\"Already have an account? Login\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nexport default Register;\r\n","\r\nimport { User } from \"../models/User\";\r\nimport { dbApi } from \"./httpService\";\r\nexport class UserR {\r\n  userName: string;\r\n  userPassword: string;\r\n  userFirstName: string;\r\n  userLastName: string;\r\n}\r\nconst apiEndpoint = \"/user\";\r\nexport function register(user:UserR) {\r\n  return dbApi.post(apiEndpoint, {\r\n   // userId:user.userId,\r\n    userName: user.userName,\r\n    userPassword: user.userPassword,\r\n    userFirstname: user.userFirstName,\r\n    userLastname: user.userLastName,\r\n  });\r\n}\r\n\r\n","import { Grid, IconButton } from \"@material-ui/core\";\r\nimport React, { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { Pokemon, PokemonType } from \"../models/Pokemon\";\r\nimport { getCurrentUser } from \"../services/authService\";\r\nimport { deletePokeFromFavorite, getfavList, getOnePokemon } from \"../services/pokemonServices\";\r\nimport { PokemonDisplay } from \"./pokemonDisplay\";\r\nimport { Favorites, User } from \"../models/User\";\r\nimport { pokeApi } from \"../services/httpService\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Pagination from \"./common/pagination\";\r\n\r\n\r\n\r\ninterface IPokemonDisplayProps {\r\n  pokemons: Pokemon[];\r\n\r\n}\r\n\r\n\r\n\r\nconst FavoritesList: React.FunctionComponent<IPokemonDisplayProps> = ({ pokemons }) => {\r\n\r\n  const [favotiteList, changeFavoriteList] = useState<Favorites[]>([])\r\n  const [favListOfPoke, changeFavListOfPoke] = useState<Pokemon[]>([])\r\n  const [pageSize, setPageSize] = useState<number>(9);\r\n  const [currPage, setCurrPage] = useState<number>(1);\r\n  const [newData, setNewData] = useState<Boolean>(false)\r\n  var user = JSON.parse(localStorage.getItem('userKey')!);\r\n  const userid = user.userId;\r\n\r\n\r\n  useEffect(() => {\r\n    let getFavList = async () => {\r\n\r\n      changeFavoriteList(await getfavList(userid))\r\n    }\r\n    getFavList()\r\n\r\n\r\n    setNewData(false)\r\n\r\n  }, [newData])\r\n\r\n\r\n  let chageState = () => {\r\n\r\n    console.log(\"clocked \")\r\n    setNewData(true)\r\n\r\n  }\r\n\r\n\r\n  console.log()\r\n\r\n\r\n  let displayPokemon = pokemons.map((fpokemon) => {\r\n    for (let i = 0; i < favotiteList.length; i++) {\r\n      if (fpokemon.id === favotiteList[i].favPokeId) {\r\n        let isfav = true\r\n        return (\r\n          <Grid key={fpokemon.id} xs={2} item>\r\n            <PokemonDisplay pokemon={fpokemon} favorite={favotiteList[i]} isfavorite={isfav} trigger={chageState} />\r\n\r\n          </Grid>\r\n        )\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={2} >\r\n        {displayPokemon}\r\n      </Grid>\r\n      <Pagination\r\n        itemsCount={favotiteList.length}\r\n        pageSize={pageSize}\r\n        currentPage={currPage}\r\n        onPageChange={setCurrPage}\r\n      />\r\n    </>\r\n  )\r\n}\r\nexport default FavoritesList;","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { TeamList, Teams } from \"../models/User\";\r\nimport { getOnePokemon, getTeamById } from \"../services/pokemonServices\";\r\nimport { Grid, IconButton, List, ListItem } from \"@material-ui/core\";\r\nimport { Pokemon } from \"../models/Pokemon\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\nconst TeamCard: React.FunctionComponent<any> = (props) => {\r\n  const classes = useStyles();\r\n  const [currentTeamList, changeCurrentTeamList] = useState<TeamList[]>([]);\r\n  const [currentPokemon, setPokemon] = useState<Pokemon[]>([]);\r\n  useEffect(() => {\r\n    const getTeamList = async () => {\r\n      changeCurrentTeamList(await getTeamById(props.id));\r\n    };\r\n    getTeamList();\r\n  }, []);\r\n\r\n  let tempArr: Pokemon[] = [];\r\n  useEffect(() => {\r\n    const getPokemon = async () => {\r\n      for (let i = 0; i < currentTeamList.length; i++) {\r\n        let pokemon = await getOnePokemon(currentTeamList[i].teamPokeId);\r\n        tempArr.push(pokemon);\r\n      }\r\n      setPokemon([...tempArr]);\r\n    };\r\n    getPokemon();\r\n  }, []);\r\n\r\n  let displayTeamList = currentPokemon.map((teamL) => {\r\n    return (\r\n      <div key={teamL.id}>\r\n        <Grid xs={4} item>\r\n          <List>\r\n            <ListItem>{teamL.name}</ListItem>\r\n          </List>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.title}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            Team\r\n          </Typography>\r\n          <Typography>{props.name}</Typography>\r\n          {displayTeamList}\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\nexport default TeamCard;\r\n","import React, { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { getTeamById } from \"../services/pokemonServices\";\r\nimport { TeamList, Teams } from \"../models/User\";\r\nimport { Grid, IconButton } from \"@material-ui/core\";\r\nimport TeamCard from \"./teamCard\";\r\n\r\nconst Team: React.FunctionComponent<any> = (props) => {\r\n  const [currentTeam, changeCurrentTeam] = useState<Teams[]>([]);\r\n\r\n  let user = JSON.parse(localStorage.getItem(\"userKey\")!);\r\n  const myArr = user.teams;\r\n  const teamNames: Teams[] = [];\r\n\r\n  useEffect(() => {\r\n    const getTeam = async () => {\r\n      for (let i = 0; i < myArr.length; i++) {\r\n        teamNames.push(myArr[i]);\r\n        //  let teamList=await getTeamById(myArr[i].teamid)\r\n      }\r\n      changeCurrentTeam([...teamNames]);\r\n    };\r\n    getTeam();\r\n  }, []);\r\n\r\n  let displayTeam = currentTeam.map((fteam) => {\r\n    return (\r\n      <Grid xs={4} item>\r\n        <div key={fteam.teamid}></div>\r\n\r\n        <TeamCard id={fteam.teamid} name={fteam.teamName} />\r\n      </Grid>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        {displayTeam}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default Team;\r\n","import { pokeApi } from \"../httpService\";\r\nimport { Pokemon } from \"../../models/Pokemon\";\r\nimport { generationUrl } from \"./generationService\";\r\nimport { typeUrl } from \"./typeService\";\r\n\r\nconst apiEndpoint = \"/pokemon\";\r\n\r\nfunction pokemonUrl(identifier: any) {\r\n  return `${apiEndpoint}/${identifier}`;\r\n}\r\n\r\nexport const getPokemons = async (\r\n  offset: number = 0,\r\n  limit: number = 2000\r\n): Promise<Pokemon[]> => {\r\n  try {\r\n    const options = {\r\n      params: {\r\n        offset,\r\n        limit,\r\n      },\r\n    };\r\n    let { data } = await pokeApi.get(apiEndpoint, options);\r\n\r\n    //batch api calls\r\n    let pokemons: Promise<Pokemon>[] = data.results.map((ele: any) => {\r\n      return getPokemon(ele.name);\r\n    });\r\n\r\n    //wait for all requests to finish\r\n    return await Promise.all(pokemons);\r\n  } catch (e) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport const getPokemon = async (identifier: string): Promise<Pokemon> => {\r\n  try {\r\n    let { data } = await pokeApi.get(pokemonUrl(identifier));\r\n\r\n    let pokemon = new Pokemon();\r\n    pokemon.id = data.id;\r\n    pokemon.name = data.name;\r\n    pokemon.picture = data.sprites.front_default;\r\n    pokemon.weight = data.weight;\r\n    pokemon.type = [\r\n      data.types[0].type.name,\r\n      data.types[1] && data.types[1].type.name,\r\n    ];\r\n    return pokemon;\r\n  } catch (e) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport const getPokemonByGeneration = async (\r\n  identifier: any\r\n): Promise<Pokemon[]> => {\r\n  try {\r\n    let res = await pokeApi.get(generationUrl(identifier));\r\n\r\n    let pokemons: Promise<Pokemon>[] = res.data.pokemon_species.map(\r\n      (ele: any) => {\r\n        return getPokemon(ele.name);\r\n      }\r\n    );\r\n\r\n    return await Promise.all(pokemons);\r\n  } catch (e) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport const getPokemonByType = async (identifier: any): Promise<Pokemon[]> => {\r\n  try {\r\n    let res = await pokeApi.get(typeUrl(identifier));\r\n\r\n    let pokemons: Promise<Pokemon>[] = res.data.pokemon.map((ele: any) => {\r\n      return getPokemon(ele.pokemon.name);\r\n    });\r\n\r\n    return await Promise.all(pokemons);\r\n  } catch (e) {\r\n    throw new Error();\r\n  }\r\n};\r\n\r\nexport const getPokemonBySearch = async (input: string): Promise<Pokemon[]> => {\r\n  try {\r\n    let res = await pokeApi.get(\"/pokemon\");\r\n\r\n    let pokemons: Promise<Pokemon>[] = res.data.results.map((ele: any) => {\r\n      let tmp = ele.name.startsWith(input);\r\n\r\n      if (tmp) {\r\n        return getPokemon(ele.name);\r\n      }\r\n    });\r\n\r\n    return await Promise.all(pokemons);\r\n  } catch (e) {\r\n    throw new Error();\r\n  }\r\n};\r\n","import {\r\n  Button,\r\n  createStyles,\r\n  Divider,\r\n  Grid,\r\n  makeStyles,\r\n  TextareaAutosize,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Pokemon, PokemonType } from \"../models/Pokemon\";\r\nimport { getOnePokemon } from \"../services/pokemonServices\";\r\nimport { PokemonDisplay } from \"./pokemonDisplay\";\r\n\r\nexport const Game: React.FunctionComponent<any> = () => {\r\n  const [pokedex, setPokeDex] = useState<Pokemon[]>([]);\r\n  const [rendomPokemon, setRendomPokemon] = useState<Pokemon>({\r\n    name: \"bulbasaur\",\r\n    id: 1,\r\n    weight: 20,\r\n    picture:\r\n      \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png\",\r\n    type: [PokemonType.Grass, PokemonType.Poison],\r\n  });\r\n  const [sendRequest, setSendRequest] = useState(true);\r\n\r\n  const pokeId = () => {\r\n    const min = Math.ceil(1);\r\n    const max = Math.floor(500);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  };\r\n\r\n  console.log(pokeId());\r\n\r\n  useEffect(() => {\r\n    console.log(\"i am calling \");\r\n\r\n    if (sendRequest) {\r\n      let getPoke = async () => {\r\n        setRendomPokemon(await getOnePokemon(pokeId()));\r\n      };\r\n      getPoke();\r\n    }\r\n\r\n    setSendRequest(false);\r\n  }, [sendRequest]);\r\n\r\n  console.log(rendomPokemon);\r\n\r\n  const removePokemaon = (id: number) => {\r\n    setPokeDex((prevState) => prevState.filter((p) => p.id != id));\r\n  };\r\n\r\n  let storePoke = (pokemon: Pokemon) => {\r\n    setPokeDex((prevState) => {\r\n      const pokeExist =\r\n        prevState.filter((poke) => pokemon.id == poke.id).length > 0;\r\n      if (!pokeExist) {\r\n        return [...prevState, pokemon];\r\n      } else {\r\n        return prevState;\r\n      }\r\n    });\r\n\r\n    setSendRequest(true);\r\n  };\r\n\r\n  let pokeDexDisplay = pokedex.map((pokemon) => {\r\n    return (\r\n      <>\r\n        <Grid item xs={3} alignContent=\"flex-start\" key={pokemon.id}>\r\n          <PokemonDisplay pokemon={pokemon} />\r\n        </Grid>\r\n      </>\r\n    );\r\n  });\r\n\r\n  let RendomDisplayPokemon = () => {\r\n    return (\r\n      <>\r\n       <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={1}\r\n        >\r\n            <Grid item xs={12}>\r\n          <PokemonDisplay pokemon={rendomPokemon}></PokemonDisplay>\r\n          </Grid>\r\n          <Grid item xs={12} >\r\n              \r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={() => storePoke(rendomPokemon)}\r\n            >\r\n              Catch\r\n            </Button>\r\n          \r\n          \r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={() => setSendRequest(true)}\r\n            >\r\n              Skip\r\n            </Button>\r\n            </Grid>\r\n            </Grid>\r\n      </>\r\n    );\r\n  };\r\n  //<div style={{ float: \"right\" }}>\r\n//<div style={{ float: \"left\" }}>\r\n  //<div style={{ margin: \" 1% 0% 1% 36%\" }}> \r\n  //<div style={{ padding: \"auto\", margin: \"0% 45% 1% 36%\" }}>\r\n  return (\r\n    <>\r\n      \r\n        <RendomDisplayPokemon></RendomDisplayPokemon>\r\n      \r\n      \r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          spacing={1}\r\n        >\r\n          {pokeDexDisplay}\r\n        </Grid>\r\n      \r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas, faPlus, faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport { User } from \"./models/User\";\r\nimport Pokedex from \"./components/pokedex\";\r\nimport Navbar from \"./components/navbar\";\r\nimport { NotFound } from \"./components/notFound\";\r\n\r\nimport ProtectedRoute from \"./components/protectedRoute\";\r\nimport Login from \"./components/loginComponent/login\";\r\nimport Register from \"./components/registerComponent/register\";\r\nimport FavoritesList from \"./components/favoriteslist\";\r\nimport Team from \"./components/team\";\r\nimport { Pokemon } from \"./models/Pokemon\";\r\nimport { getPokemons } from \"./services/pokeServices/pokemonService\";\r\nimport { Game } from \"./components/game\";\r\n\r\nlibrary.add(fas, faPlus, faHeart);\r\n\r\nexport const UserContext = React.createContext<any>(undefined);\r\n\r\nfunction App() {\r\n  const [user, changeUser] = useState<User>();\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n\r\n  useEffect(() => {\r\n    const initializeData = async () => {\r\n      let pokemons = await getPokemons();\r\n\r\n      setPokemons(pokemons);\r\n    };\r\n    initializeData();\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={user}>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login}></Route>\r\n\r\n          <ProtectedRoute\r\n            path=\"/fav\"\r\n            render={() => <FavoritesList pokemons={pokemons} />}\r\n          />\r\n          <ProtectedRoute path=\"/teams\" component={Team} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route\r\n            path=\"/pokemons\"\r\n            render={() => <Pokedex pokemons={pokemons} />}\r\n          />\r\n          <ProtectedRoute\r\n            path=\"/game\"\r\n            render={() => <Game pokemons={pokemons} />}\r\n          />\r\n          <Route path=\"/not-found\" component={NotFound} />\r\n          <Redirect exact from=\"/\" to=\"/pokemons\" />\r\n          <Redirect to=\"/not-found\" />\r\n        </Switch>\r\n      </Router>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}